name: Lambda Function CI/CD
env:
  ARTIFACT_NAME: csye6225-lambda-function-${{ github.sha }}.zip
  CODEDEPLOY_ARTIFACT_NAME: csye6225-lambda-codedeploy-${{ github.sha }}.yml
  FUNCTION_NAME: csye6225-email-verification
  FUNCTION_ALIAS: csye6225-email-verification-alias
  CODEDEPLOY_APPLICATION_NAME: csye6225-webapp-lambda
  CODEDEPLOY_APPLICATION_GROUP_NAME: csye6225-webapp-deployment-lambda
on: push
jobs:
  build:
    name: Build Artifact and Upload to S3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Lambda Function Artifact
        run: |
          mkdir codedeploy_artifact
          zip -r ${{ env.ARTIFACT_NAME }} index.js
          pwd
          ls -al
          mv ${{ env.ARTIFACT_NAME }} codedeploy_artifact/
          cd codedeploy_artifact/
          pwd
          ls -al
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Copy Artifact to S3
        run: |
          aws s3 sync ./codedeploy_artifact s3://${{ secrets.AWS_S3_CODEDEPLOY_BUCKET }}
      - name: Update Lambda Function Code
        run: |
          output=$(aws lambda update-function-code \
            --function-name  ${{ env.FUNCTION_NAME }} \
            --s3-bucket ${{ secrets.AWS_S3_CODEDEPLOY_BUCKET }} --s3-key ${{ env.ARTIFACT_NAME }} \
            --publish)
          echo $output

          version=$(echo $output | jq -r '.Version')
          currVersion=$(expr $version - 1)
          echo $version
          echo $currVersion

          echo "version: 0.0 
          Resources: 
            - myLambdaFunction: 
                Type: AWS::Lambda::Function
                Properties:
                  Name: "csye6225-email-verification"
                  Alias: "csye6225-email-verification-alias"
                  CurrentVersion: "$currVersion"
                  TargetVersion: "$version"
          " > appspec.yml

          cat appspec.yml
      - name: Build CodeDeploy Artifact
        run: |
          mkdir codedeploy_artifact_lambda
          mv appspec.yml codedeploy_artifact_lambda/${{ env.CODEDEPLOY_ARTIFACT_NAME }}
      - name: Copy Artifact to S3
        run: |
          aws s3 sync ./codedeploy_artifact_lambda s3://${{ secrets.AWS_S3_CODEDEPLOY_BUCKET }}
      - name: CodeDeploy API Call
        run: |
          output=$(aws deploy create-deployment \
            --application-name ${{ env.CODEDEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.LambdaAllAtOnce \
            --deployment-group-name ${{ env.CODEDEPLOY_APPLICATION_GROUP_NAME }} \
            --description "CSYE6225 CodeDeploy" \
            --s3-location bucket=${{ secrets.AWS_S3_CODEDEPLOY_BUCKET }},key=${{ env.CODEDEPLOY_ARTIFACT_NAME }},bundleType=YAML \
            --region ${{ secrets.AWS_REGION }} \
            --output json)

          echo $output

          dId=$(echo $output | jq -r '.deploymentId')
          aws deploy wait deployment-successful --deployment-id $dId
